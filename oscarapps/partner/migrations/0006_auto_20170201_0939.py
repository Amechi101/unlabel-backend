# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-02-01 09:39
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('address', '0002_auto_20170125_0546'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('partner', '0005_category_partnerfollow'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProfileInformation',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'verbose_name': 'Profile Information',
            },
            bases=('users.user', models.Model),
        ),
        migrations.CreateModel(
            name='RentalAddress',
            fields=[
                ('locations_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='address.Locations')),
                ('post_box', models.CharField(blank=True, default='', max_length=20, verbose_name='Apartment/P.O.Box')),
                ('zipcode', models.CharField(blank=True, default='', max_length=10, null=True, verbose_name='Zip code')),
                ('contact_number', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits are allowed.", regex='^\\+?1?\\d{9,15}$')])),
            ],
            bases=('address.locations',),
        ),
        migrations.CreateModel(
            name='RentalTime',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('day', multiselectfield.db.fields.MultiSelectField(choices=[('MO', 'Monday'), ('TU', 'Tuesday'), ('WE', 'Wednesday'), ('TH', 'Thursday'), ('FR', 'Friday'), ('SA', 'Saturday'), ('SU', 'Sunday')], max_length=20)),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
            ],
            options={
                'verbose_name': 'Rental Time',
            },
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('style', models.CharField(blank=True, max_length=100, unique=True, verbose_name='Style')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
            ],
            options={
                'verbose_name_plural': 'Styles',
                'verbose_name': 'Style',
            },
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified', models.DateTimeField(auto_now=True, null=True)),
                ('sub_category', models.CharField(blank=True, max_length=100, unique=True, verbose_name='Sub Category')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
            ],
            options={
                'verbose_name_plural': 'Sub Categories',
                'verbose_name': 'Sub Category',
            },
        ),
        migrations.AlterModelOptions(
            name='partner',
            options={'verbose_name': 'Brands Detail'},
        ),
        migrations.AddField(
            model_name='partner',
            name='created',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='partner',
            name='description',
            field=models.TextField(blank=True, default='', verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='partner',
            name='image',
            field=models.ImageField(blank=True, max_length=255, null=True, upload_to='Brands', verbose_name='Image'),
        ),
        migrations.AddField(
            model_name='partner',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Check|Un check to activate|deactivate store', verbose_name='Store Active'),
        ),
        migrations.AddField(
            model_name='partner',
            name='location',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='get_partner', to='address.Locations', verbose_name='Location'),
        ),
        migrations.AddField(
            model_name='partner',
            name='modified',
            field=models.DateTimeField(auto_now=True, null=True),
        ),
        migrations.AddField(
            model_name='partner',
            name='slug',
            field=models.SlugField(blank=True, default='', max_length=255, verbose_name='Brand Slug'),
        ),
        migrations.AddField(
            model_name='partnerfollow',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='partnerfollow',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partner.Partner'),
        ),
        migrations.AddField(
            model_name='partner',
            name='category',
            field=models.ManyToManyField(blank=True, to='partner.Category', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='partner',
            name='profile_info',
            field=models.ManyToManyField(blank=True, to='partner.ProfileInformation', verbose_name='Profile Information'),
        ),
        migrations.AddField(
            model_name='partner',
            name='rental_address',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='partner.RentalAddress', verbose_name='Rental Address'),
        ),
        migrations.AddField(
            model_name='partner',
            name='rental_time',
            field=models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='partner.RentalTime', verbose_name='Rental Time'),
        ),
        migrations.AddField(
            model_name='partner',
            name='style',
            field=models.ManyToManyField(blank=True, to='partner.Style', verbose_name='Style'),
        ),
        migrations.AddField(
            model_name='partner',
            name='sub_category',
            field=models.ManyToManyField(blank=True, to='partner.SubCategory', verbose_name='Category'),
        ),
    ]
